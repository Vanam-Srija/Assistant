sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/Text","sap/m/MessageToast"],function(e,t,s){"use strict";return e.extend("sap.assistant.assistant.controller.Main",{onInit:function(){const e=new sap.ui.model.json.JSONModel({messages:[]});this.getView().setModel(e,"chat")},onToggleChatbot:function(){const e=this.getView();const t=e.byId("chatbotPanel");const s=e.byId("openChatbotBtn");const o=t.getVisible();t.setVisible(!o);s.setVisible(o);if(!o){setTimeout(()=>{const t=e.byId("chatInput");if(t){t.focus()}},300)}},onSend:async function(){console.log("MainController: onSend triggered");const e=this.byId("chatInput");const t=e.getValue().trim();if(!t){s.show("Please enter a question.");return}this._addMessage("user",t);e.setValue("");const o="/odata/v4/salesorder";const n=async()=>{const e=await fetch(o,{method:"GET",headers:{"X-CSRF-Token":"Fetch"},credentials:"include"});if(!e.ok){throw new Error("Failed to fetch CSRF token")}return e.headers.get("X-CSRF-Token")};const r=async(e,s)=>{const n=await fetch(`${o}/${e}`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":s},body:JSON.stringify({input:t}),credentials:"include"});if(!n.ok)throw new Error(`${e} failed`);return await n.json()};const a=e=>{console.log("formatResponse input:",e);if(!e||!Array.isArray(e.value)||e.value.length===0){console.warn("formatResponse: Empty or invalid result.value");return null}const t=e.value[0];if(t.hasOwnProperty("success")&&t.success===false){console.warn("formatResponse: success is false, returning null to fallback");return null}if(t.hasOwnProperty("success")&&t.success===true){if(t.topCustomers){return t.topCustomers.map(e=>`${e.customer} - Orders: ${e.orderCount}, Total: $${e.totalNetValue}`).join("\n")}if(t.repeatCustomers){return t.repeatCustomers.map(e=>`${e.customer} - Orders: ${e.orderCount}`).join("\n")}if(t.latestOrders){const e=t.latestOrders.map(e=>`Sales Order ID: ${e.SalesOrderID}\nCreated At: ${e.CreatedAt}`).join("\n\n-------------------------\n\n");return`${t.message}\n\n${e}`}if(t.orders){const e=t.orders.map(e=>`Sales Order ID: ${e.SalesOrderID}\nCreated At: ${e.CreatedAt}`).join("\n\n-------------------------\n\n");return`${t.message}\n\n${e}`}return t.message||"No message available"}if(t.results&&Array.isArray(t.results)&&t.results.length>0){return t.results.map(e=>Object.entries(e).map(([e,t])=>`${e}: ${t}`).join("\n")).join("\n\n-------------------------\n\n")}if(typeof t==="string"){return t}if(Array.isArray(e.value)&&"reply"in e.value[0]){return e.value.map(e=>e.reply).join("\n\n-------------------------\n\n")}console.warn("formatResponse: no recognizable data format");return null};try{const e=await n();let t=await r("askBot",e);console.log("askBot response:",t);let s=a(t);if(!s){console.log("askBot response invalid, trying chatbot fallback");t=await r("chatbot",e);console.log("chatbot response:",t);s=a(t)}this._addMessage("bot",s||"No results found.");this.scrollToBottom()}catch(e){console.error("Exception in onSend:",e);this._addMessage("bot","Unexpected error occurred: "+e.message);this.scrollToBottom()}},onKeyUp:function(e){if(e.getParameter("liveValue")&&e.getSource().getValue().trim()!==""){if(e.getSource().getValue().includes("\n")){this.onSend()}}},scrollToBottom:function(){setTimeout(()=>{const e=this.byId("chatScroll");const t=e&&e.getDomRef();if(t){e.scrollTo(0,t.scrollHeight,300)}},100)},_addMessage:function(e,t){const s=this.getView().getModel("chat");const o=s.getProperty("/messages")||[];o.push({role:e,text:t});s.setProperty("/messages",o)}})});
//# sourceMappingURL=Main.controller.js.map